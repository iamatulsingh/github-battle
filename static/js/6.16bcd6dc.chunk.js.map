{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","components/Instructions.js","components/PlayerInput.js","components/PlayerPreview.js","components/Battle.js"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","Instructions","theme","className","color","size","PlayerInput","state","username","handleSubmit","event","preventDefault","props","onSubmit","handleChange","setState","target","htmlFor","label","type","id","placeholder","autoComplete","onChange","disabled","React","Component","PlayerPreview","onReset","src","alt","href","onClick","Battle","playerOne","playerTwo","player","handleReset","this","Fragment","to","pathname","search"],"mappings":"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","file":"static/js/6.16bcd6dc.chunk.js","sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import React from 'react'\nimport { FaUserFriends, FaFighterJet, FaTrophy } from 'react-icons/fa'\nimport { ThemeConsumer } from '../contexts/theme'\n\nexport default function Instructions() {\n  return (\n    <ThemeConsumer>\n      {({ theme }) => (\n        <div className='instructions-container'>\n          <h1 className='center-text header-lg'>\n            Instructions\n          </h1>\n          <ol className='container-sm grid center-text battle-instructions'>\n            <li>\n              <h3 className='header-sm'>Enter two Github users</h3>\n              <FaUserFriends className={`bg-${theme}`} color='rgb(255, 191, 116)' size={140} />\n            </li>\n            <li>\n              <h3 className='header-sm'>Battle</h3>\n              <FaFighterJet className={`bg-${theme}`} color='#727272' size={140} />\n            </li>\n            <li>\n              <h3 className='header-sm'>See the winners</h3>\n              <FaTrophy className={`bg-${theme}`} color='rgb(255, 215, 0)' size={140} />\n            </li>\n          </ol>\n        </div>\n      )}\n    </ThemeConsumer>\n  )\n}","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { ThemeConsumer } from '../contexts/theme'\n\nexport default class PlayerInput extends React.Component {\n  state = {\n    username: ''\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault()\n    this.props.onSubmit(this.state.username)\n  }\n\n  handleChange = (event) => {\n    this.setState({\n      username: event.target.value\n    })\n  }\n\n  render() {\n    return (\n      <ThemeConsumer>\n        {({ theme }) => (\n          <form className='column player' onSubmit={this.handleSubmit}>\n            <label htmlFor='username' className='player-label'>\n              {this.props.label}\n            </label>\n            <div className='row player-inputs'>\n              <input \n                type='text'\n                id='username'\n                className={`input-${theme}`}\n                placeholder='github username'\n                autoComplete='off'\n                value={this.state.username}\n                onChange={this.handleChange}\n              />\n              <button\n                className={`btn ${theme === 'light' ? 'dark-btn' : 'light-btn'}`}\n                type='submit'\n                disabled={!this.state.username}\n              >\n                Submit\n              </button>\n            </div>\n          </form>\n        )}\n      </ThemeConsumer>\n    )\n  }\n}\n\nPlayerInput.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  label: PropTypes.string.isRequired,\n}","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { FaTimesCircle } from 'react-icons/fa'\nimport { ThemeConsumer } from '../contexts/theme'\n\nexport default function PlayerPreview({username, onReset, label}) {\n  return (\n    <ThemeConsumer>\n      {({theme}) => (\n        <div className='column player'>\n          <h3 className='player-label'>{label}</h3>\n          <div className={`row bg-${theme}`}>\n            <div className='player-info'>\n              <img \n                className='avatar-small' \n                src={`https://github.com/${username}.png?size=200`}\n                alt={`Avatar for ${username}`}\n              />\n              <a \n                href={`https://github.com/${username}`}\n                className='link'\n              >\n                {username}\n              </a>\n            </div>\n            <button className='btn-clear flex-center' onClick={onReset}>\n              <FaTimesCircle color='rgb(194, 57, 42)' size={26} />\n            </button>\n          </div>\n        </div>\n      )}\n    </ThemeConsumer>\n  )\n}\n\nPlayerPreview.propTypes = {\n  username: PropTypes.string.isRequired,\n  onReset: PropTypes.func.isRequired,\n  label: PropTypes.string.isRequired,\n}","import React from 'react'\nimport Instructions from './Instructions'\nimport PlayerInput from './PlayerInput'\nimport PlayerPreview from './PlayerPreview'\nimport { Link } from 'react-router-dom'\n\nexport default class Battle extends React.Component {\n  state = {\n    playerOne: null,\n    playerTwo: null,\n  }\n\n  handleSubmit = (id, player) => {\n    this.setState({\n      [id]: player\n    })\n  }\n\n  handleReset = (id) => {\n    this.setState({\n      [id]: null\n    })\n  }\n\n  render() {\n    const { playerOne, playerTwo } = this.state\n\n    return (\n      <React.Fragment>\n        <Instructions />\n\n        <div className='players-container'>\n          <h1 className='center-text header-lg'>Players</h1>\n          <div className='row space-around'>\n            { playerOne === null\n              ? <PlayerInput \n                  label='Player One' \n                  onSubmit={player => { this.handleSubmit('playerOne', player) }}/>\n              : <PlayerPreview\n                  username={playerOne}\n                  label='Player One'\n                  onReset={() => { this.handleReset('playerOne') }} /> \n            }\n            \n            { playerTwo === null \n              ? <PlayerInput \n                  label='Player Two' \n                  onSubmit={player => { this.handleSubmit('playerTwo', player) }}/>\n              : <PlayerPreview\n                  username={playerTwo}\n                  label='Player Two'\n                  onReset={() => { this.handleReset('playerTwo') }} /> \n            }\n          </div>\n\n          { playerOne && playerTwo && (\n            <Link\n              className='btn dark-btn btn-space'\n              to={{\n                pathname: '/battle/results',\n                search: `?playerOne=${playerOne}&playerTwo=${playerTwo}`\n              }}\n            >\n              Battle\n            </Link>\n          )}\n        </div>\n      </React.Fragment>\n    )\n  }\n}"],"sourceRoot":""}